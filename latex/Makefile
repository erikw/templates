# Compile a LaTeX file to different output formats.
# Inspired latexmk(1) usage from: http://tex.stackexchange.com/questions/40738/how-to-properly-make-a-latex-project
# The tail after latexmk is to minimize unnecessary output and look more like a real make for .c files i.e. no output if nothing to do.
TARGETS_NAMES = paper letter slides

TARGETS_PDF = $(addsuffix .pdf, $(TARGETS_NAMES))
TARGETS_DVI = $(addsuffix .dvi, $(TARGETS_NAMES))
TARGETS_PS  = $(addsuffix .ps, $(TARGETS_NAMES))
VC=vc.tex

# Force latexmk to always run by making %.pdf a phony target.
.PHONY: all clean help open wc %.dvi %.ps %.pdf

# target: all - Default target; create all PDF version.s
#all: $(TARGETS_PDF) $(TARETS_DVI) $(TARGETS_PS)
all: $(TARGETS_PDF)

# target: help - Display all targets.
help:
	@egrep "#\starget:" [Mm]akefile  | cut -d " " -f3-

# target: clean - Deletes all generated files.
clean:
	latexmk -C |& tail -n +5
	$(RM) *.bbl # Remove Bibtex file.
	$(RM) *.tpt # Remove PDF thumbnails.
	$(RM) $(VC)
	$(RM) *.nav *.snm # Beamer files not being cleaned up by $(latexmk -C).

# target: open - open the first produced PDF.
open: $(word 1, $(TARGETS_PDF))
	xdg-open $<

# target checkrefs - Check for unused references with https://github.com/cereda/checkcites
checkrefs: $(NAME).aux
	texlua ${HOME}/src/checkcites/checkcites.lua --all $(NAME).aux

# target: wc - Count real words in the tex file.
wc:
	bin/texcount	$(NAME).tex

# target: cc - Count real characters in the tex file.
cc:
	bin/untex/untex	$(NAME).tex | wc -c


# target: <name>.pdf - Create PDF version of <name>.
%.pdf: %.tex
	#@latexmk -use-make -pdf -pdflatex="pdflatex -file-line-error -interaction nonstopmode" $< |& tail -n +5
	#@latexmk -use-make -pdf -pdflatex="pdflatex -file-line-error" $< |& tail -n +5  # Strips the latexmk intro text, but also hides errors.
	@latexmk -use-make -pdf -pdflatex="pdflatex -file-line-error" $<

# target: <name>.dvi - Create DVI version of <name>.
# target: <name>.ps - Create Postscript version of <name>.
%.dvi %.ps: %.tex
	latexmk -silent -use-make -dvi -ps $<

# Called by latexmk.
%.tpt: %.pdf
	thumbpdf $<

# target <name>.eps - Create eps from dia diagrams.
%.eps: %.dia
	dia --export $@ $<

# Produce git revision TeX file.
# TODO break out latex/ to own template git to avoid '..'.
# Source: Modified version of
# http://thorehusfeldt.net/2011/05/13/including-git-revision-identifiers-in-latex/
paper.tex: $(VC)
$(VC): $(wildcard ../.git/logs/HEAD ./.git/logs/HEAD)
	echo "%%% This file is generated by Makefile." > $(VC); \
	echo "%%% Do not edit this file!\n%%%" >> $(VC); \
	if git rev-parse --git-dir >/dev/null 2>&1; then \
		git log -1 --format="format: \
			\\gdef\\GITAbrHash{%h} \
			\\gdef\\GITAuthorDate{%ad} \
			\\gdef\\GITAuthorName{%an}" >> $(VC); \
	else \
		printf "%s\n%s\n%s\n" \
		 "\\gdef\\GITAbrHash{NIL}" \
		 "\\gdef\\GITAuthorDate{NIL}" \
		 "\\gdef\\GITAuthorName{NIL}" >> $(VC); \
	fi
